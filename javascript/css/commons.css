@charset "UTF-8";

/*
    commons.css

    이 파일에는 자주 사용하는 작은 화면에 대한 클래스가 존재

    제작일자 : 2023-02-22
    제작자 : 제작자

*/

/* reset.css 로 이동하였음 향후 제거*/
* {
    box-sizing: border-box;
    font-family: '맑은 고딕';
}


/* 
            container는 표시될 폭과 정렬방식을 가운데로 설정 
            가운데라고만 하면 너무 애매하므로 다음과 같이 세분화
            1. 내용물을 가운데 정렬한다. (text-align)
            2. 자신을 가운데 정렬한다. (margin auto)
                - auto는 자동으로 계산해서 가능한 값을 부여하라는 의미
        */
.container-200 {width : 200px; margin : 0 auto;}
.container-300 {width : 300px; margin : 0 auto;}
.container-400 {width : 400px; margin : 0 auto;}
.container-500 {width : 500px; margin : 0 auto;}
.container-600 {width : 600px; margin : 0 auto;}
.container-700 {width : 700px; margin : 0 auto;}
.container-800 {width : 800px; margin : 0 auto;}
.container-900 {width : 900px; margin : 0 auto;}
.container-1000 {width : 1000px; margin : 0 auto;}

 /* row와 row 사이에는 일정한 간격을 부여 */
 .row{
    margin : 10px 0px;
}


.form-input{
    font-size: 22px;
    padding: 0.25em;
    outline: none;      /*선택 시 강조효과 제거*/
    border: 2px solid #636e72;
    border-radius: 0.2em;
}
.form-input:focus{  /*커서가 위치했을 때*/
    border-color: black;
}


     /*
            추가 스타일
            - 파일 선택창은 테두리를 나오게 하지 않겠다
        */
        input[type=file].form-input{
            border-color: transparent;
        }

/*
 textarea는 리사이즈(resize)에 대한 설정이 필요하다
    - resize : vertical;  - 수직변경만
    - resize : none;     - 변경 X

    만약 resize가 vertical이면 최소높이가 지정되어야 한다.
*/
        .form-textarea{
            resize: vertical;
            min-height: 20em;
        }



/*
    버튼은 역할에 따라 색상이 다름
    - 긍정 버튼은 초록~파랑 계열
    - 부정 버튼은 주황~빨강 계열
    - 중립 버튼은 흑백 계열
*/
.form-btn{
    font-size: 22px;
    padding: 0.25em;
    border-width: 2px;
    border-style: solid;
    border-radius: 0.2em;
    cursor: pointer;
}
 /*
    a 태그를 버튼과 동일한 모양으로 만들 수 있도록 개조
    - display가 inline 이므로 block 속성이 들어가게 개조(폭설정)   
     - text-align으로 글자를 가운데 정렬
     - text-decoration으로 밑줄 제거
*/
    a.form-btn{
    display: inline-block;
    text-align: center;
    text-decoration: none;
}

/*버튼 스타일*/
/*.form-btn과 .positive가 같이 있으면*/
.form-btn.positive {
    background-color: #74b9ff;
    border-color: #74b9ff;
    color: white
}
.form-btn.negative {
    background-color: #ff7675;
    border-color: #ff7675;
    color: white;
}
.form-btn.neutral {
    background-color: #dfe6e9;
    border-color: #dfe6e9;
    color: #2d3436;
}
.form-btn:hover{
    filter:brightness(107%);    /*원래보다 7% 밝게*/
}


       /*
            링크 스타일
        */
        a.link{
            color:#636e72;
            text-decoration: none;
        }
        a.link:hover{
            color:#0984e3;
        }


  /* 폭 설정 클래스 */
  .w-100{width: 100%;}
  .w-75{width: 75%;}
  .w-70{width: 70%;}
  .w-50{width: 50%;}
  .w-40{width: 40%;}
  .w-33{width: 33.3333%;}
  .w-30{width: 30%;}
  .w-25{width: 25%;}
  .w-10{width: 10%;}

  /* 내용물 정렬 클래스 */
  .center {text-align: center;}
  .left {text-align: left;}
  .right {text-align: right;}

          
/*
    외부 여백(margin)을 부여할 수 있도록 설정(10~50px)
    .mv - margin vertical
    .mt - margin top
    .mb - margin bottom
    .ms - margin start(left)
    .me - margin end(right)

    내부 여백(padding)을 부여할 수 있도록 설정(10~50px)
    .p - padding
    .pt - padding top
    .pb - padding bottom
    .ps - padding start(left)
    .pe - padding end(right)
*/      
        .mv-10 { margin:10px 0; }
        .mv-20 { margin:20px 0; }
        .mv-30 { margin:30px 0; }
        .mv-40 { margin:40px 0; }
        .mv-50 { margin:50px 0; }

        .mt-10 { margin-top: 10px; }
        .mt-20 { margin-top: 20px; }
        .mt-30 { margin-top: 30px; }
        .mt-40 { margin-top: 40px; }
        .mt-50 { margin-top: 50px; }

        .mb-10 { margin-bottom: 10px; }
        .mb-20 { margin-bottom: 20px; }
        .mb-30 { margin-bottom: 30px; }
        .mb-40 { margin-bottom: 40px; }
        .mb-50 { margin-bottom: 50px; }

        .ms-10 { margin-left: 10px; }
        .ms-20 { margin-left: 20px; }
        .ms-30 { margin-left: 30px; }
        .ms-40 { margin-left: 40px; }
        .ms-50 { margin-left: 50px; }

        .me-10 { margin-right: 10px; }
        .me-20 { margin-right: 20px; }
        .me-30 { margin-right: 30px; }
        .me-40 { margin-right: 40px; }
        .me-50 { margin-right: 50px; }

        .p-10 { padding: 10px; }
        .p-20 { padding: 20px; }
        .p-30 { padding: 30px; }
        .p-40 { padding: 40px; }
        .p-50 { padding: 50px; }

        .pt-10 { padding-top: 10px; }
        .pt-20 { padding-top: 20px; }
        .pt-30 { padding-top: 30px; }
        .pt-40 { padding-top: 40px; }
        .pt-50 { padding-top: 50px; }

        .pb-10 { padding-bottom: 10px; }
        .pb-20 { padding-bottom: 20px; }
        .pb-30 { padding-bottom: 30px; }
        .pb-40 { padding-bottom: 40px; }
        .pb-50 { padding-bottom: 50px; }

        .ps-10 { padding-left: 10px; }
        .ps-20 { padding-left: 20px; }
        .ps-30 { padding-left: 30px; }
        .ps-40 { padding-left: 40px; }
        .ps-50 { padding-left: 50px; }

        .pe-10 { padding-right: 10px; }
        .pe-20 { padding-right: 20px; }
        .pe-30 { padding-right: 30px; }
        .pe-40 { padding-right: 40px; }
        .pe-50 { padding-right: 50px; }

    /*
        label 디자인
        - label은 inline이 기본값이다
        - .form-label은 inline-block으로 변경
    */
    .form-label{
        display: inline-block;
    }


      /*
             메인 클래스를 .table로 설정
            서브 클래스를 지정
            - .table-border : 테두리 구현
        */
        .table{
            width:100%;
            border-spacing: 0;
        }


        /*  이렇게 만들면 테이블이 중첩되는 경우 내부 테이블까지 영향을 미침
        .table th,
        .table td{
            padding:0.5em;
        }
        */  
        .table > thead > tr > th,
        .table > thead > tr > td,
        .table > tbody > tr > th,
        .table > tbody > tr > td,
        .table > tfoot > tr > th,
        .table > tfoot > tr > td {
            padding:0.5em;
        }


        
        /*
         테두리 부여 서브 스타일
            - 테이블과 칸에 테두리를 부여하고 border-collapse 설정
         */
         
         .table.table-border{
            border-collapse: collapse;
         }

         .table.table-border,
         .table.table-border > thead > tr > th,
         .table.table-border > thead > tr > td,
         .table.table-border > tbody > tr > th,
         .table.table-border > tbody > tr > td,
         .table.table-border > tfoot > tr > th,
         .table.table-border > tfoot > tr > td{
            border:1px solid #636e72;
         }

         /*
            hover 서브 스타일
         */
         .table.table-hover > tbody > tr:hover{
                background-color: #2d3436 ;
                color: #dfe6e9;
            }
         


        /*
            striped 서브 스타일
            - :first-child는 첫 번째 항목을 의미
            - :nth-child(1)은  1번째 항목을 의미
            - :nth-child(2n)은  n=1,2,3...로 변화할 때 해당 순서를 선택
        */
        .table.table-striped > thead > tr,
        .table.table-striped > tfoot > tr,
        .table.table-striped > tbody > tr:nth-child(2n){
            background-color: #2d3436 ;
            color: #dfe6e9;
         }



         /*
            slit 테이블 서브 스타일
         */
         .table.table-slit{
            border-collapse: collapse;
            border-top: 4px double black;
            border-bottom: 4px double black;
         }
         .table.table-slit > thead{
            border-bottom:4px double black;
         }
         .table.table-slit > tfoot{
            border-top: 4px double black;
         }
         /*
            마지막 줄은 제외하고 하려면 : not(선택자)를 붙인다
         */
         .table.table-slit > tbody > tr:not(last-child){
            border-bottom: 1px dotted black;
         }


         /*
            페이지네이션(Pagination) 디자인
            - a 태그에 폭 설정이 불가능하므로 display를 변경(inline-block)
            - 활성화 상태를 .on으로 정의하고 :hover와 동일하게 처리

            (주의)
            border는 폭,높이에 영향을 미치므로 추가/제거가 반복될 경우
            투명 테두리를 설정해둬야 한다

            대안으로는 그림자(box-shadow)를 사용하는 방법이 있다.
            box-shadow: x위치 y위치 번짐 퍼짐 색상;
        */
        .pagination{
            text-align: center;
        }
        .pagination > a{
            display: inline-block;
            color: #636e72;
            text-decoration: none;
            font-size: 16px;
            min-width: 3em;
            height: 3em;
            padding: 1em;
            text-align:  center;
            border: 1px solid transparent;
        }
        .pagination > a.on,
        .pagination > a:hover:not(.disabled){
            /* border-color: black; */
            color: red;
            font-weight: bold;
            box-shadow: 0px 0px 0px 1px black;
        }
        
        .pagination > a.disabled{
        	cursor: not-allowed;
        }



        /*
            이미지를 표시하는 방법
            [1] <img> 사용
                - 이미지는 크기 표준화가 어려우므로 width, height 속성 사용
            [2] bg-image 사용
        */
        .image{

        }
        /* 테두리 부여*/
        .image.image-border-hover:hover,
        .image.image-border{
            box-shadow: 0 0 3px 3px #636e72;
        }

        /* 그림자 처리*/
        .image.image-shadow-hover:hover,
        .image.image-shadow{
            box-shadow: 3px 3px 0 0 #636e72;
        }

        /* 둥근/원형 이미지*/
        .image.image-round{
            border-radius: 5px;;
        }
        .image.image-circle{
            border-radius: 50%;
        }

        /* 불투명도(opacity) */
        .image.image-blur{
            opacity: 0.5;
        }
        .image.image-blur:hover,
        image.image-blur.on{
            opacity:1;
        }




         /*
            이미지를 표시하는 방법
            [1] <img> 사용
                - 이미지는 크기 표준화가 어려우므로 width, height 속성 사용
            [2] background-image 사용
        */
        .form-input-search{
            /*url은 이 파일 위치를 기준으로 경로를 계산(상대경로) */
            background-image: url("./image/search.jpg");
            /*
                cover - 큰쪽에 이미지를 맞춤
                contain - 작은 쪽에 이미지를 맞춤
                두 개 부여하면 앞이 폭, 뒤가 높이
            */
            background-size: auto 75%;
            background-repeat: no-repeat;
            /*
                위치선정은 x,y순으로 하며
                - px
                - %
                - 키워드(x - left/center/right , y - top/center/bottom)
            */
            background-position: left 5px center;

            /* 글자 입력란을 오른쪽으로 밀기 위해 여백을 부여 */
            padding-left: 2em;
        }

        
        input.form-input.form-input-bg{
            /*
                cover - 큰쪽에 이미지를 맞춤
                contain - 작은 쪽에 이미지를 맞춤
                두 개 부여하면 앞이 폭, 뒤가 높이
            */
            background-size: auto 75%;
            background-repeat: no-repeat;
            /*
                위치선정은 x,y순으로 하며
                - px
                - %
                - 키워드(x - left/center/right , y - top/center/bottom)
            */
            background-position: left 5px center;

            /* 글자 입력란을 오른쪽으로 밀기 위해 여백을 부여 */
            padding-left: 2em;
        }
        input[name=memberId]{
            background-image:url("./image/user.jpg")
        }
        input[name=memberPw]{
            background-image:url("./image/lock.png")
        }





          /* 
        (참고) 
        z-index가 없어도 fixed가 가장 높게 나온다 
        opacity는 내부의 모든 항목의 불투명도를 조절
        일반적으로 전체화면에서는 background-color로 불투명도를 조절
        */

        .fullscreen{
            background-color: rgba(0,0,0,0,2);
            /* background-color: transparent; */
            background-color: black;
            opacity: 0.5;
            
            position: fixed;

            top:0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: 9999;
        }

        .fullscreen > .fullscreen-container{
            /* background-color: white; */
            background-image: url("./image/loading.gif");
            background-repeat: no-repeat;
            background-size: contain;
            background-position: left top;

            /*폭 높이는 설정*/
            width: 80px;
            height: 80px;

            position: absolute;
            top: 50%;
            left: 50%;

            
            /*
            가운데 배치하는 방법
            크기의 절반만큼 반대방향으로 이동
            1. margin 사용
                - 장점 : 안되는 브라우저가 없음
                - 단점 : 크기를 알아야 함
                margin-left: -150px;
                margin-top: -200px;

            2. transform 함수 사용(위치, 각도, 기울기, 확대 등을 처리하는 함수)
                - 장점 : 이동크기 계산이 필요없음
                - 단점 : 구버전 IE에서 안됨
            
            3. display:flex 사용
            4. display:grid 사용
            */
            transform: translate(-50%, -50%);
            
        }


          /*
            flexbox 레이아웃
            - 영역에 display:flex 또는 display:inline-flex라고 설정하여 구현
            - 영역 차원에서 설정하는 옵션이 많음
                - flex-direction : 영역 내부 컨텐츠 배치 방향
                - flex-wrap : 영역 내부 컨텐츠 줄바꿈
                - justify-content : 영역 내부 컨텐츠 가로 정렬
                - align-items : 영역 내부 컨텐츠 세로 정렬
            - 개별 항목에는 배치 비율을 지정할 수 있다
                - flex-grow : 남는 공간에 대한 할당 비율
        */
        .flex-box{
            display: flex;
        }
        .flex-box.flex-auto-width > *{
            flex-grow: 1;
        }
        .flex-box.flex-vertical{
            flex-direction: column;
        }
        .flex-box.align-center{
            justify-content: center;
            align-items: center;
        }

        .inline-flex-box{
            display: inline-flex;
        }



             /* main을 제어해서 홈페이지 전체 폭과 정렬을 제어 */
             main{
                width: 1000px;
                margin: 0 auto;
            }
    
            /* 내부 영역에 기본 여백을 부여 */
            header, footer{
                padding: 2em;
            }
    
            /* section은 다단 레이아웃이 가능하도록 배치 */
            section{
                display: flex;
            }
            
            aside{
                width: 150px;
            }
            
            article{
                flex-grow: 1;
                padding: 1em;
                min-height: 450px;
            }





          /*
             드롭다운(drop down) 메뉴 만들기
            - 계층형 구조이므로 list 태그로 만든다
            - 가장 중요한 스킬은 원하는 차수의 메뉴를 선택하는 것

            1차 메뉴 선택자 : .menu > li
            2차 메뉴 선택자 : .menu > li > ul > li
            3차 메뉴 선택자 : .menu > li > ul > li > ul > li

            1차 이상 메뉴 : .menu li
            2차 이상 메뉴 : .menu > li li
            3차 이상 메뉴 : .menu > li > ul > li li

            (1) 리스트의 모든 스타일을 제거(여백, 표시방식)
            (2) 모든 a태그의 스타일을 제거
            (3) 1차 메뉴의 항목들의 표시 방식(display)을 inline-block으로 변경
            (4) 2차 이상의 메뉴(ul)들 배치 방식(position)을 absolute로 변경
                모든 메뉴(li)는 기준점 설정을 위해 배치 방식을 relative로 변경
            (5) 2차 이상의 메뉴(ul)를 숨김 처리
            (6) 메뉴(li)에 마우스를 올리면(hover) 하위 메뉴를 표시
            (7) 메누 항목(li) 에 마우스가 올라가면(hover) 색상을 변경
            (8) 3차 메뉴 이상은 오른쪽에 나오도록 처리
            (9) 메뉴 내부에 글자가 많을 경우 말줄임표 처리
            (10) 1차 메뉴 중 오른쪽 메뉴(.right-menu)에 대한 처리
            (11) 오른쪽 메뉴의 3차 이상 메뉴에 대한 처리
        */
        /*
            (Q) 2차 이상의 메뉴 a태그 글자색 빨강으로 변경
        */

        /* 2차 메뉴만 */
        /* .menu > li > ul > li > a {
            color: red;
        } */
        /* .menu ul li:nth-child(n+1){
            color: red;
        } */


        /* (1) */
        .menu, .menu ul{
            list-style: none;
            margin: 0;
            padding: 0;
            font-size: 10px;
            color: white;
            background-color: #b2bec3

        }

        /* (2) */
        .menu a{
            display: block;
            width: 100%;
            text-decoration: none;
            color: inherit;             /*바깥에 있는 설정 따라가기(상속)*/

            padding: 0.5em;
        }

        /* (3) */
        .menu > li{
            display: inline-block;
            width: 80px;
        }

        /* (4) 2차 이상*/
        .menu > li ul {
            position: absolute;
            left: 0;
            top: 100%;
            width: 80px;
        }

        .menu, .menu li{
            position: relative;
        }
        
        /* (5) */
        .menu > li ul {
            display: none;
        }

        /* (6) */
        .menu li:hover > ul {
            display: block;
        }

        /* (7) */
        .menu li:hover{
            background-color: #636e72;
        }

        /* (8) 3차 이상 */
        .menu > li > ul > li ul{
            top: 0;
            left: 100%;
        }

        /* (9) */
        .menu a{
            /* 
            말줄임표 세트
            (전제조건) 폭이 확정적이어야 한다.
            - overflow는 넘치는 화면에 대한 처리를 설정
            - white-space는 넘치는 항목에 대한 개행 처리를 설정
            - text-overflow는 글자가 넘칠 경우의 처리를 설정
            */
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
        }

        /* (10) */
        .menu > li.right-menu{
            position: absolute;
            top: 0;
            right: 0;
        }
 
        /* (11) */
        .menu > li.right-menu > ul > li ul{
            left: auto;
            right: 100%;
        }

        /*메뉴창 수평 안맞는것*/
        .menu{
            height: 2.5em;
        }
        .menu li{
            height: 100%

        }     




        .valid-message {
            color: forestgreen;
            display: none;
        }
        .invalid-message,
        .invalid-message2,
        .invalid-message3 {
            color: red;
            display: none;
        }
        /* 
            입력창이 성공상태(.valid)일 경우 
            뒤에 있는 성공메세지(.valid-message)를 표시 
        */
        .valid ~ .valid-message {
            display: block;
        }
        /* 
            입력창이 실패상태(.invalid)일 경우 
            뒤에 있는 실패메세지(.invalid-message)를 표시 
        */
        .invalid ~ .invalid-message {
            display: block;
        }
        .invalid2 ~ .invalid-message2 {
            display: block;
        }
        .invalid3 ~ .invalid-message3 {
            display: block;
        }

        /* 입력창 디자인 */
        .valid, .invalid {
            background-position: top 50% right 3%;
            background-size: auto 60%;
            background-repeat: no-repeat;
        }
        .valid {
            border-color: forestgreen;
            background-image: url("image/valid.png");
        }

        .invalid, .invalid2, .invalid3 {
            border-color: red;
            background-image: url("image/invalid.png");
        }
        

        .form-btn.positive[disabled],
        .form-btn.positive[disabled]:hover {
            cursor: not-allowed;
            background-color: lightblue;
            border-color: lightblue;
            filter: none;
        }

        